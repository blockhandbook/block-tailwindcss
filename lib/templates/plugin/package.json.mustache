{
	"name": "{{slug}}",
	"version": "{{version}}",
	"description": "{{{description}}}",
	"author": "{{author}}",
	"license": "{{license}}",
	"main": "./src/index.js'",
	"config": {
		"authorUri": "{{{authorURI}}}",
		"pluginUri": "{{{pluginURI}}}",
		"upgradeLink": "{{{pluginURI}}}",
		"pluginName": "{{title}}",
		"contributors": "{{author}}",
		"tags": "blockhandbook, block handbook",
		"slug": "{{slug}}",
		"slugSnakeCase": "{{slugSnakeCase}}",
		"slugCamelCase": "{{slugCamelCase}}",
		"namespace": "{{phpClassName}}",
		"textdomain": "{{textdomain}}",
		"testedUpTo": "5.4",
		"language": "eo"
	},
	"dependencies": {
		"classnames": "^2.2.6"
	},
	"devDependencies": {
		{{# nothin }}
		"@blockhandbook/block-hot-loader": "^{{blockHotLoaderVersion}}",
		{{/ nothin }}
		"@blockhandbook/block-fast-refresh": "^{{blockFastRefreshVersion}}",
		{{#bootstrap}}
		"@blockhandbook/bootstrap": "^{{bootstrapVersion}}",
			{{#registerVariations}}
		"@blockhandbook/bootstrap-controls": "^{{bootstrapControlsVersion}}",
			{{/registerVariations}}
			{{^registerVariations}}
				{{#registerFilters}}
		"@blockhandbook/bootstrap-controls": "^{{bootstrapControlsVersion}}",
				{{/registerFilters}}
			{{/registerVariations}}
		{{/bootstrap}}
		{{#load_dynamic_blocks}}
		"@blockhandbook/controls": "^{{controlsVersion}}",
		"@blockhandbook/data": "^{{dataVersion}}",
		{{/load_dynamic_blocks}}
		{{^load_dynamic_blocks}}
			{{#registerVariations}}
				{{#noCssFramework}}
		"@blockhandbook/controls": "^{{controlsVersion}}",
				{{/noCssFramework}}
			{{/registerVariations}}
			{{^registerVariations}}
				{{#registerFilters}}
					{{#noCssFramework}}
		"@blockhandbook/controls": "^{{controlsVersion}}",
					{{/noCssFramework}}
				{{/registerFilters}}
			{{/registerVariations}}
		{{/load_dynamic_blocks}}
		{{#tailwindcss}}
		"@blockhandbook/tailwindcss": "^{{tailwindcssVersion}}",
			{{#registerVariations}}
		"@blockhandbook/tailwindcss-controls": "^{{tailwindcssControlsVersion}}",
			{{/registerVariations}}
			{{^registerVariations}}
				{{#registerFilters}}
		"@blockhandbook/tailwindcss-controls": "^{{tailwindcssControlsVersion}}",
				{{/registerFilters}}
			{{/registerVariations}}
		{{/tailwindcss}}
		"@wordpress/env": "^2.1.0",
		"@wordpress/scripts": "^13.0.3",
		"bestzip": "^2.1.5",
		"replace-in-file": "^6.1.0"
	},
	"scripts": {
		"start": "npm run browser-sync{{#tailwindcss}} & npm run tailwind:watch{{/tailwindcss}}{{#bootstrap}} & npm run bootstrap:watch{{/bootstrap}}",
		"build": "wp-scripts build{{#bootstrap}} && npm run bootstrap:build{{/bootstrap}}{{#tailwindcss}} && npm run tailwind:build{{/tailwindcss}}",
		"server:start": "npx wp-env start && npm run cli:install-gutenberg && npm run cli:permalinks",
		"server:stop": "npx wp-env stop",
		{{!"config:update-this-is-dangerous": "replace-in-file --configFile=./replace.config.js --regEx --verbose",}}
		"server:clean": "npx wp-env clean && npm run server:stop && rm -rf node_modules wordpress vendor",
		"server:destroy": "npx wp-env destroy",
		"composer:generate-autoloader": "composer dump-autoload -o",
		"format:js": "wp-scripts format-js",
		"lint:css": "wp-scripts lint-style",
		"lint:js": "wp-scripts lint-js",
		"lint:pkg-json": "wp-scripts lint-pkg-json",
		"packages-update": "wp-scripts packages-update",
		"i18n:make-pot": "wp i18n make-pot ./ ./languages/$npm_package_config_textdomain.pot --headers='{\"Last-Translator\":\"{{author}} <{{authorEmail}}>\",\"Language-Team\":\"{{author}} <{{ authorEmail}}>\"}' --exclude=src && cp ./languages/$npm_package_config_textdomain.pot ./languages/$npm_package_config_textdomain-$npm_package_config_language.po",
		"i18n:make-json": "wp i18n make-json ./languages/ && rename 's/({{slug}}-[a-zA-Z_]+-)[^\\.]*(\\.json)/$1{{slug}}-block-editor$2/' ./languages/*",
		"i18n:make-mo": "cd languages && find . -name \\*.po -execdir sh -c 'msgfmt \"$0\" -o `basename $0 .po`.mo' '{}' \\;",
		"svn:make": "svn co https://plugins.svn.wordpress.org/$npm_package_config_slug svn",
		"svn:add": "cd svn && svn add trunk/* && svn add assets/* && svn add branches && svn add tags/*",
		"svn:tag": "cd svn && svn cp trunk tags/$npm_package_version",
		"svn:update": "cd svn && svn up",
		"test:e2e": "wp-scripts test-e2e",
		"test:unit": "wp-scripts test-unit-js",
		"wp": "npx wp-env run cli wp",
		"zip": "npm run zip:mkdir && bestzip $npm_package_config_slug-$npm_package_version.zip ./$npm_package_config_slug/* && npm run zip:rmdir",
		"browser-sync": "browser-sync start --config ./bs-config.js",
		"browser-sync": "browser-sync start --config ./bs-config.js",
		"cli:install-gutenberg": "npx wp-env run cli wp plugin install gutenberg && npx wp-env run cli wp plugin activate gutenberg",
		"cli:permalinks": "npx wp-env run cli wp rewrite structure /%postname%/ --hard",
		"cli:activate-theme": "wp-env run cli wp theme activate block-theme",
		"server:setup": "npm run setup && npm run server:start",
		"plugin:increment-version": "replace-in-file --configFile=./replace.config.js --regEx --verbose",
		"version": "npm run build && npm run plugin:increment-version && git add .",
		"postversion": "git push --tags",
		{{#noCssFramework}}
		"setup": "composer install && npm run composer:generate-autoloader && npm install && npm run build"
		{{/noCssFramework}}
		{{^noCssFramework}}
		"setup": "composer install && npm run composer:generate-autoloader && npm install && npm run build",
		{{/noCssFramework}}
		{{#bootstrap}}
		"bootstrap:build": "npm run bootstrap:compile && npm run bootstrap:purge && npm run bootstrap:prepend && npm run bootstrap:prefix",
		"bootstrap:compile": "node-sass --include-path node_modules --output-style compressed --precision 6 ./src/bootstrap.scss -o ./build",
		"bootstrap:prepend": "postcss --config ./postcss.config.js ./build/bootstrap.css -o ./build/bootstrap.css",
		"bootstrap:prefix": "postcss --replace build/bootstrap.css --use autoprefixer --map",
		"bootstrap:purge": "purgecss --css ./build/bootstrap.css --content ./build/*.js,./src/**/*.php,./includes/**/*.php,./node_modules/@blockhandbook/**/*.js --output ./build/",
		"bootstrap:watch": "nodemon --watch ./src/bootstrap.scss -x \"npm run bootstrap:compile && npm run bootstrap:prepend\"",
		{{/bootstrap}}
		{{#tailwindcss}}
		"tailwind:build": "cross-env NODE_ENV=production postcss --config ./postcss.config.js ./src/tailwind.css -o ./build/tailwind.css",
		"tailwind:watch": "cross-env NODE_ENV=development postcss --config ./postcss.config.js ./src/tailwind.css -o ./build/tailwind.css -w",
		{{/tailwindcss}}
		"zip:old": "bestzip ./$npm_package_config_slug.zip ./src ./$npm_package_config_slug.php ./readme.txt ./LICENSE [ ./build ./languages ./includes ./vendor ]",
		"zip:mkdir": "mkdir $npm_package_config_slug && cp -r build includes src vendor LICENSE readme.txt $npm_package_config_slug.php ./$npm_package_config_slug",
		"zip:rmdir": "rm -r ./$npm_package_config_slug"
	}
}
